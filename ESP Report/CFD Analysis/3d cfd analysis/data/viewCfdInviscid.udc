# .udc to make the CfdInvisicd view
# written by John Dannenhoffer

INTERFACE . ALL

# constants used by aflr4
SET        AFLR4_Cmp_Fuse     1
SET        AFLR4_Cmp_Wing     2
SET        AFLR4_Cmp_Htail    3
SET        AFLR4_Cmp_Vtail    4
SET        AFLR4_Cmp_Nacelle  5
SET        AFLR4_Cmp_Pylon    6
SET        AFLR4_Cmp_Farfield 7

# get the Oml first
UDPRIM    $/viewOml

# if there are multiple Bodys on the stack, put the one with the
#    largest volume on the top of the stack
IFTHEN    @stack.size GT 1
   DIMENSION bodyList @stack.size 1
   SET       bodyList @stack
   SET       itop     0
   SET       vmax     0

   PATBEG    ibody  bodyList.size
      SELECT    BODY    bodyList[ibody]
      IFTHEN    @volume GT vmax
         SET    itop  bodyList[ibody]
         SET    vmax  @volume
      ENDIF
      STORE     bodyList  ibody
   PATEND

   PATBEG    ibody  bodyList.size
      IFTHEN    bodyList[ibody] NE itop
         RESTORE   bodyList  bodyList.size+1-ibody
      ENDIF
   PATEND
   PATBEG    ibody  bodyList.size
      IFTHEN    bodyList[ibody] EQ itop
         RESTORE   bodyList  bodyList.size+1-ibody
      ENDIF
   PATEND
ENDIF

DIMENSION  xflap  1  4
DIMENSION  yflap  1  4

# add the control surfaces to the wing
IFTHEN    COMP:wing NE 0
   PATBEG ihinge wing:hinge.nrow*COMP:controls

      # set the at-parameters for the wing
      RESTORE   wingOml
      STORE     .

      # aileron and outboard flap
      IFTHEN wing:hinge[ihinge,3] LT -wing:break OR wing:hinge[ihinge,3] GT +wing:break
         SET  s (abs(wing:hinge[ihinge,6])-wing:break)/(1-wing:break)
         SET c2 wing:chordb*(1-s)+wing:chordt*s

         SET xflap[1] @xmax+1
         SET yflap[1] wing:hinge[ihinge,6]*wing:span/2

         SET xflap[2] wing:xbreak*(1-s)+wing:xtip*s+c2*wing:hinge[ihinge,5]
         SET yflap[2] yflap[1]

         SET  s (abs(wing:hinge[ihinge,3])-wing:break)/(1-wing:break)
         SET c3 wing:chordb*(1-s)+wing:chordt*s

         SET xflap[3] wing:xbreak*(1-s)+wing:xtip*s+c3*wing:hinge[ihinge,2]
         SET yflap[3] wing:hinge[ihinge,3]*wing:span/2

         SET xflap[4] xflap[1]
         SET yflap[4] yflap[3]

      # inboard flaps
      ELSE
         SET  s abs(wing:hinge[ihinge,6])/wing:break
         SET c2 wing:chordr*(1-s)+wing:chordb*s

         SET xflap[1] @xmax+1
         SET yflap[1] wing:hinge[ihinge,6]*wing:span/2

         SET xflap[2] wing:xroot*(1-s)+wing:xbreak*s+c2*wing:hinge[ihinge,5]
         SET yflap[2] yflap[1]

         SET  s abs(wing:hinge[ihinge,3])/wing:break
         SET c3 wing:chordr*(1-s)+wing:chordb*s

         SET xflap[3] wing:xroot*(1-s)+wing:xbreak*s+c3*wing:hinge[ihinge,2]
         SET yflap[3] wing:hinge[ihinge,3]*wing:span/2

         SET xflap[4] xflap[1]
         SET yflap[4] yflap[3]
      ENDIF

      # generate the flap
      UDPARG    $$/flapz xflap xflap
      UDPARG    $$/flapz yflap yflap
      UDPRIM    $$/flapz gap wing:hinge[ihinge,8] theta wing:hinge[ihinge,1]

      IFTHEN    yflap.min GT 0
         UDPRIM    editAttr  filename  <<
            FACE    HAS  *=*
            ANDNOT  HAS  tagComp=*
            SET          tagComp=riteWing
            SET          tagType=filler
         >>
      ELSE
         UDPRIM    editAttr  filename  <<
            FACE    HAS  *=*
            ANDNOT  HAS  tagComp=*
            SET          tagComp=leftWing
            SET          tagType=filler
         >>
      ENDIF
   PATEND
ENDIF

# add the control surfaces to the htail
IFTHEN    COMP:htail NE 0  AND  COMP:fuse NE 0
   PATBEG ihinge htail:hinge.nrow*COMP:controls

      # set the at-parameters for the htail
      RESTORE   htailOml
      STORE     .

      # points to cut out elevator
      SET  s abs(htail:hinge[ihinge,6])
      SET c2 htail:chordr*(1-s)+htail:chordt*s

      SET xflap[1] @xmax+1
      SET yflap[1] htail:hinge[ihinge,6]*htail:span

      SET xflap[2] htail:xroot*(1-s)+htail:xtip*s+c2*htail:hinge[ihinge,5]
      SET yflap[2] yflap[1]

      SET  s abs(htail:hinge[ihinge,3])
      SET c3 htail:chordr*(1-s)+htail:chordt*s

      SET xflap[3] htail:xroot*(1-s)+htail:xtip*s+c3*htail:hinge[ihinge,2]
      SET yflap[3] htail:hinge[ihinge,3]*htail:span

      SET xflap[4] xflap[1]
      SET yflap[4] yflap[3]

      # generate the elevator
      UDPARG    $$/flapz xflap xflap
      UDPARG    $$/flapz yflap yflap
      UDPRIM    $$/flapz gap htail:hinge[ihinge,8] theta htail:hinge[ihinge,1]

      IFTHEN    yflap.min GT 0
         UDPRIM    editAttr  filename  <<
            FACE    HAS  *=*
            ANDNOT  HAS  tagComp=*
            SET          tagComp=riteHtail
            SET          tagType=filler
         >>
      ELSE
         UDPRIM    editAttr  filename  <<
            FACE    HAS  *=*
            ANDNOT  HAS  tagComp=*
            SET          tagComp=leftHtail
            SET          tagType=filler
         >>
      ENDIF
   PATEND
ENDIF

# add the control surfaces to the vtail
IFTHEN    COMP:vtail NE 0  AND  COMP:fuse NE 0
   PATBEG ihinge vtail:hinge.nrow*COMP:controls
      # set the at-parameters for the vtail
      RESTORE   vtailOml
      STORE     .

      # rotate to add flaps
      ROTATEX -90 0 0

      # points to cut out rudder
      SET  s abs(vtail:hinge[ihinge,7])
      SET c2 vtail:chordr*(1-s)+vtail:chordt*s

      SET xflap[1] @xmax+1
      SET yflap[1] vtail:zroot*(1-s)+vtail:ztip*s

      SET xflap[2] vtail:xroot*(1-s)+vtail:xtip*s+c2*vtail:hinge[ihinge,5]
      SET yflap[2] yflap[1]

      SET  s abs(vtail:hinge[ihinge,4])
      SET c3 vtail:chordr*(1-s)+vtail:chordt*s

      SET xflap[3] vtail:xroot*(1-s)+vtail:xtip*s+c3*vtail:hinge[ihinge,2]
      SET yflap[3] vtail:zroot*(1-s)+vtail:ztip*s

      SET xflap[4] xflap[1]
      SET yflap[4] yflap[3]

      # generate the elevator
      UDPARG    $$/flapz xflap xflap
      UDPARG    $$/flapz yflap yflap
      UDPRIM    $$/flapz gap vtail:hinge[ihinge,8] theta vtail:hinge[ihinge,1]


      UDPRIM    editAttr  filename  <<
         FACE    HAS  *=*
         ANDNOT  HAS  tagComp=*
         SET          tagComp=vtail
         SET          tagType=filler
      >>

      # rotate back into the XZ plane
      ROTATEX 90 0 0
   PATEND
ENDIF

# add the necessary CAPS Attributes to all the Bodys on the stack
SET       nbody    @stack.size
PATBEG    ibody    nbody
   STORE  tempBody ibody
PATEND

SET       xmin     +1e20
SET       xmax     -1e20
SET       ymin     +1e20
SET       ymax     -1e20
SET       zmin     +1e20
SET       zmax     -1e20

PATBEG    ibody    nbody
   RESTORE   tempBody  nbody+1-ibody
      ATTRIBUTE capsAIM    $tetgenAIM;aflr3AIM;aflr4AIM;pointwiseAIM;su2AIM;fun3dAIM;cart3dAIM
      ATTRIBUTE capsLength $ft
   SET    xmin     min(xmin,@xmin)
   SET    xmax     max(xmax,@xmax)
   SET    ymin     min(ymin,@ymin)
   SET    ymax     max(ymax,@ymax)
   SET    zmin     min(zmin,@zmin)
   SET    zmax     max(zmax,@zmax)

   UDPRIM    editAttr  filename <<
      FACE HAS    tagComp=fuselage
      SET         capsGroup=Fuselage
      SET         capsBound=Fuselage
      SET         capsMesh=Fuselage
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Fuse

      FACE HAS    tagComp=leftWing  tagType=upper
      SET         capsGroup=Wing
      SET         capsBound=upperWing
      SET         capsMesh=leftWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=leftWing  tagType=lower
      SET         capsGroup=Wing
      SET         capsBound=lowerWing
      SET         capsMesh=leftWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=leftWing  tagType=filler
      SET         capsGroup=Wing
      SET         capsMesh=leftWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=leftWing  tagType=tip
      SET         capsGroup=Wing
      SET         capsBound=leftTip
      SET         capsMesh=leftWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=riteWing  tagType=upper
      SET         capsGroup=Wing
      SET         capsBound=upperWing
      SET         capsMesh=riteWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=riteWing  tagType=lower
      SET         capsGroup=Wing
      SET         capsBound=lowerWing
      SET         capsMesh=riteWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=riteWing  tagType=filler
      SET         capsGroup=Wing
      SET         capsMesh=riteWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=riteWing  tagType=tip
      SET         capsGroup=Wing
      SET         capsBound=riteTip
      SET         capsMesh=riteWing
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Wing

      FACE HAS    tagComp=leftHtail
      SET         capsGroup=Htail
      SET         capsMesh=Htail
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Htail

      FACE HAS    tagComp=riteHtail
      SET         capsGroup=Htail
      SET         capsMesh=Htail
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Htail

      FACE HAS    tagComp=vtail
      SET         capsGroup=Vtail
      SET         capsMesh=Vtail
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Vtail

      FACE HAS    tagComp=leftNacelle
      SET         capsGroup=Nacelle
      SET         capsMesh=Nacelle
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Nacelle

      FACE HAS    tagComp=riteNacelle
      SET         capsGroup=Nacelle
      SET         capsMesh=Nacelle
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Nacelle

      FACE HAS    tagComp=leftPylon
      SET         capsGroup=Pylon
      SET         capsMesh=Pylon
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Pylon

      FACE HAS    tagComp=ritePylon
      SET         capsGroup=Pylon
      SET         capsMesh=Pylon
      SET         AFLR4_Cmp_ID=!AFLR4_Cmp_Pylon
   >>
PATEND

# Set referece quanteties on the airplane
SELECT BODY
   ATTRIBUTE capsReferenceArea  wing:area
   ATTRIBUTE capsReferenceSpan  wing:span
   ATTRIBUTE capsReferenceChord wing:mac
   ATTRIBUTE capsReferenceX     wing:xroot+wing:mac/4.0
   ATTRIBUTE capsMeshLength     wing:mac

# build the farfield
SET       size   20*max(xmax-xmin,ymax-ymin)
BOX       (xmin+xmax-size)/2   (ymin+ymax-size)/2   (zmin+zmax-size)/2 \
          size                 size                 size
   ATTRIBUTE _name              $Farfield
   ATTRIBUTE capsGroup          $Farfield
   ATTRIBUTE capsMesh           $Farfield
   ATTRIBUTE AFLR4_Cmp_ID       AFLR4_Cmp_Farfield
SELECT BODY
   ATTRIBUTE capsAIM            $tetgenAIM;aflr3AIM;aflr4AIM;pointwiseAIM;su2AIM;fun3dAIM

END
