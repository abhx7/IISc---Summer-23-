# .udc to make the htailOml
# written by John Dannenhoffer

INTERFACE . ALL

# set a mark so that we can restore the stack back to
#    where it was when we started
MARK

# check to see if the Body already exits
RESTORE   htailOml

# if it does not exist, make it now
CATBEG    $name_not_found
   MESSAGE Building_htailOml

   # lay out left horizontal tail
   MARK
      UDPRIM    naca   thickness  htail:thick   sharpte  htail:sharpte
      ROTATEX   90     0  0
      SCALE     htail:chordr
      TRANSLATE htail:xroot  0  htail:zroot

      UDPRIM    naca   thickness  htail:thick   sharpte  htail:sharpte
      ROTATEX   90     0  0
      SCALE     htail:chordt
      TRANSLATE htail:xtip   htail:ytip  htail:ztip
   RULE
      ATTRIBUTE tagComp  $leftHtail
   SELECT    FACE      @nbody 1
      ATTRIBUTE tagType  $root
   SELECT    FACE      @nbody 2
      ATTRIBUTE tagType  $tip
   SELECT    FACE      @nbody 3
      ATTRIBUTE tagType  $upper
   SELECT    FACE      @nbody 4
      ATTRIBUTE tagType  $lower
   SELECT    EDGE      @nbody 3 @nbody 4
      ATTRIBUTE tagType  $leadingEdge

   IFTHEN    htail:sharpte EQ 0
    SELECT    FACE      @nbody 5
         ATTRIBUTE tagType  $trailingEdge
   ELSE
      SELECT    EDGE      @nbody 3 @nbody 4 2
         ATTRIBUTE tagType  $trailingEdge
   ENDIF

   # right htail too
   STORE     LeftHtail 0 1
   RESTORE   LeftHtail
      ATTRIBUTE tagComp  $riteHtail
   SELECT    EDGE  $tagType $leadingEdge
   IFTHEN    @iedge GT 0
      SELECT EDGE  $tagType $leadingEdge
         ATTRIBUTE tagComp $riteWing
   ENDIF
   IFTHEN    htail:sharpte EQ 1
      SELECT    EDGE  $tagType $trailingEdge
      IFTHEN    @iedge GT 0
         SELECT EDGE  $tagType $trailingEdge
            ATTRIBUTE tagComp $riteWing
      ENDIF
   ENDIF
   MIRROR    0  1  0

   # join into wingle tail
   JOIN

   # save the wetted area of the htail
   SET       htail:wet     @area

   # store the final Body
   STORE     htailOml
CATEND

# make sure that we did not leave any new Bodys on the stack
STORE     ..

END
